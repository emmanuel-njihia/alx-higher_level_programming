==============================
2-matrix_divided.py
==============================

an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> print(matrix_divided(matrix, 1))
[[1, 2, 3], [4, 5, 6]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 1)
[[1, 2, 3], [4, 5, 6]]
>>> matrix_divided([["abc", "def"],[5, 6]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix of integers/floats

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "a")
Traceback (most recent call last):
TypeError: divisor must be a number

>>> matrix_divided(12345, 7)
Traceback (most recent call last):
TypeError: matrix must be a matrix of integers/floats

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[2, 3, 4], [6, 8]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[3, 4]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'divisor'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1, 2], [3, 5]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

>>> matrix_divided([[1, 2], [3, 5]], float('-inf'))
[[-0.0, -0.0], [-0.0, -0.0]]

>>> matrix_divided([[1, 2], [3, 4]], -2)
[[-0.5, -1.0], [-1.5, -2.0]]
